// Script de test pour v√©rifier la correction des dates
// Ex√©cutez ce script dans la console du navigateur pour tester

console.log('üß™ Test de correction des dates...');

// Test 1: Date locale vs UTC
const testDate = new Date('2024-09-01T12:00:00');
console.log('üìÖ Date de test:', testDate);
console.log('üåç toISOString() (UTC):', testDate.toISOString().split('T')[0]);
console.log('üè† toLocalDateString():', testDate.toDateString());

// Test 2: Fonction utilitaire
function toLocalDateString(date) {
  const year = date.getFullYear();
  const month = String(date.getMonth() + 1).padStart(2, '0');
  const day = String(date.getDate()).padStart(2, '0');
  return `${year}-${month}-${day}`;
}

console.log('üîß toLocalDateString():', toLocalDateString(testDate));

// Test 3: Comparaison des m√©thodes
const now = new Date();
console.log('\nüìä Comparaison des m√©thodes:');
console.log('Date actuelle:', now);
console.log('toISOString().split("T")[0]:', now.toISOString().split('T')[0]);
console.log('toLocalDateString():', toLocalDateString(now));
console.log('toDateString():', now.toDateString());

// Test 4: V√©rification du fuseau horaire
console.log('\nüåç Informations sur le fuseau horaire:');
console.log('Fuseau horaire:', Intl.DateTimeFormat().resolvedOptions().timeZone);
console.log('Offset UTC:', now.getTimezoneOffset(), 'minutes');

// Test 5: Simulation du probl√®me
console.log('\n‚ö†Ô∏è Simulation du probl√®me:');
const eveningDate = new Date('2024-09-01T23:00:00');
console.log('Date du soir (23h00):', eveningDate);
console.log('toISOString() (probl√©matique):', eveningDate.toISOString().split('T')[0]);
console.log('toLocalDateString() (correct):', toLocalDateString(eveningDate));

console.log('\n‚úÖ Test termin√© !');
console.log('Si toLocalDateString() donne une date diff√©rente de toISOString(),');
console.log('cela confirme que le probl√®me de d√©calage est r√©solu !');
