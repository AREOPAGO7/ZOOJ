// Script de test pour v√©rifier le service de notifications des questions quotidiennes
// Ex√©cutez ce script dans la console du navigateur pour tester

console.log('üß™ Test du service de notifications des questions quotidiennes...');

// Test 1: V√©rifier que la table daily_questions existe
console.log('\nüìã Test 1: V√©rification de la table daily_questions');
console.log('Ex√©cutez ceci dans Supabase SQL Editor:');
console.log(`
SELECT 
  table_name,
  table_type
FROM information_schema.tables 
WHERE table_name = 'daily_questions';
`);

// Test 2: V√©rifier la structure de la table daily_questions
console.log('\nüèóÔ∏è Test 2: V√©rification de la structure de daily_questions');
console.log('Ex√©cutez ceci dans Supabase SQL Editor:');
console.log(`
SELECT 
  column_name,
  data_type,
  is_nullable,
  column_default
FROM information_schema.columns 
WHERE table_name = 'daily_questions'
ORDER BY ordinal_position;
`);

// Test 3: V√©rifier les questions quotidiennes existantes
console.log('\nüìÖ Test 3: V√©rification des questions quotidiennes existantes');
console.log('Ex√©cutez ceci dans Supabase SQL Editor:');
console.log(`
SELECT 
  dq.id,
  dq.couple_id,
  dq.scheduled_for,
  dq.created_at,
  q.content as question_content
FROM daily_questions dq
LEFT JOIN questions q ON dq.question_id = q.id
ORDER BY dq.created_at DESC
LIMIT 5;
`);

// Test 4: Cr√©er une question de test
console.log('\n‚ùì Test 4: Cr√©er une question de test');
console.log('Ex√©cutez ceci dans Supabase SQL Editor (remplacez YOUR_COUPLE_ID):');
console.log(`
-- D'abord, cr√©er une question dans la table questions
INSERT INTO questions (content, scheduled_time) VALUES
('Quelle est votre activit√© pr√©f√©r√©e √† faire ensemble ?', '09:00:00')
RETURNING id;

-- Ensuite, cr√©er une question quotidienne pour aujourd\'hui
INSERT INTO daily_questions (couple_id, question_id, scheduled_for) VALUES
('YOUR_COUPLE_ID', (SELECT id FROM questions WHERE content = 'Quelle est votre activit√© pr√©f√©r√©e √† faire ensemble ?' LIMIT 1), CURRENT_DATE)
RETURNING *;
`);

// Test 5: V√©rifier les notifications envoy√©es
console.log('\nüîî Test 5: V√©rifier les notifications envoy√©es');
console.log('Ex√©cutez ceci dans Supabase SQL Editor:');
console.log(`
SELECT 
  id,
  user_id,
  title,
  message,
  type,
  data,
  created_at
FROM notifications 
WHERE type = 'daily_question'
AND data->>'notificationType' = 'new_daily_question'
ORDER BY created_at DESC
LIMIT 5;
`);

// Test 6: V√©rifier les couples existants
console.log('\nüíï Test 6: V√©rifier les couples existants');
console.log('Ex√©cutez ceci dans Supabase SQL Editor:');
console.log(`
SELECT 
  id,
  user1_id,
  user2_id,
  created_at
FROM couples
LIMIT 5;
`);

// Test 7: V√©rifier les profils utilisateurs
console.log('\nüë§ Test 7: V√©rifier les profils utilisateurs');
console.log('Ex√©cutez ceci dans Supabase SQL Editor:');
console.log(`
SELECT 
  id,
  name,
  email,
  created_at
FROM profiles
LIMIT 5;
`);

// Test 8: Simulation du processus de notification
console.log('\nüîÑ Test 8: Simulation du processus de notification');
console.log('1. Cr√©ez une nouvelle question quotidienne pour aujourd\'hui');
console.log('2. Ex√©cutez le service de notification manuellement');
console.log('3. V√©rifiez que les notifications sont cr√©√©es dans la table notifications');
console.log('4. V√©rifiez que les deux membres du couple ont re√ßu une notification');

// Test 9: V√©rification des logs
console.log('\nüìù Test 9: V√©rification des logs');
console.log('Dans la console du navigateur, vous devriez voir:');
console.log('- üîç Checking for new daily questions created today...');
console.log('- üìÖ Today date: [DATE]');
console.log('- üìã Found X new daily questions for today');
console.log('- ‚úÖ Notifications sent for daily question: [QUESTION_CONTENT]');
console.log('- üéØ Daily question check complete: X questions found, Y notifications sent');

// Test 10: Test de pr√©vention des doublons
console.log('\nüõ°Ô∏è Test 10: Test de pr√©vention des doublons');
console.log('1. Ex√©cutez le service une premi√®re fois');
console.log('2. Ex√©cutez le service une deuxi√®me fois');
console.log('3. V√©rifiez qu\'aucune notification en double n\'est cr√©√©e');
console.log('4. V√©rifiez les logs: "Notifications already sent for daily question"');

console.log('\n‚úÖ Tests configur√©s !');
console.log('Ex√©cutez les requ√™tes SQL dans Supabase, puis testez le service.');
console.log('\nüí° Pour tester manuellement le service:');
console.log('1. Importez dailyQuestionNotificationService');
console.log('2. Appelez dailyQuestionNotificationService.manualCheck()');
console.log('3. V√©rifiez les r√©sultats et les logs');
